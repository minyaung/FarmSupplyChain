package FarmSupplyChain;

import com.owlike.genson.annotation.JsonProperty;
import org.hyperledger.fabric.contract.annotation.DataType;
import org.hyperledger.fabric.contract.annotation.Property;
import java.util.Objects;
import java.util.Date;

public class FarmProduct {

	@Property()
	// productId: Asset Id
	private final String productId;
	
	@Property()
	// productDescription: Description of the asset
	private final String productDescription;
	
	@Property()
	// producerName: Name of the producer or farmer
	private final String producerName;
	
	@Property()
	// producerAddress: Address of the producer or farmer
	private final String producerAddress;
	
	@Property()
	// harvestDate: Date of the harvest
	private final Date harvestDate;
	
	@Property()
	// distributerName: Name of the distributer
	private final String distributerName;
	
	@Property()
	// distributerAddress: Address of the distributer
	private final String distributerAddress;
	
	@Property()
	// prodToDistDate: Date of transfer from producer to distributer
	private final Date prodToDistDate;
	
	@Property()
	// retailerName: Name of the retailer
	private final String retailerName;
	
	@Property()
	// retailerAddress: Address of the retailer 
	private final String retailerAddress;
	
	@Property()
	// distToRetaDate: Date of transfer from distributer to retailer
	private final Date distToRetaDate;

	private String getProductId() {
		return productId;
	}

	private String getProductDescription() {
		return productDescription;
	}

	private String getProducerName() {
		return producerName;
	}

	private String getProducerAddress() {
		return producerAddress;
	}

	private Date getHarvestDate() {
		return harvestDate;
	}

	private String getDistributerName() {
		return distributerName;
	}

	private String getDistributerAddress() {
		return distributerAddress;
	}

	private Date getProdToDistDate() {
		return prodToDistDate;
	}

	private String getRetailerName() {
		return retailerName;
	}

	private String getRetailerAddress() {
		return retailerAddress;
	}

	private Date getDistToRetaDate() {
		return distToRetaDate;
	}
	productId: Asset Id
	productDescription: Description of the asset
	producerName: Name of the producer or farmer
	producerAddress: Address of the producer or farmer
	harvestDate: Date of the harvest
	distributerName: Name of the distributer
	distributerAddress: Address of the distributer
	prodToDistDate: Date of transfer from producer to distributer
	retailerName: Name of the retailer
	retailerAddress: Address of the retailer
	distToRetaDate: Date of transfer from distributer to retailer
	
	
	public FarmProduct(
			@JsonProperty("productId") final String productId, 
			@JsonProperty("productDescription") final String productDescription, 
			@JsonProperty("producerName") final String producerName,
			@JsonProperty("producerAddress") final String producerAddress, 
			@JsonProperty("harvestDate") final Date harvestDate, 
			@JsonProperty("distributerName") final String distributerName,
			@JsonProperty("distributerAddress") final String distributerAddress, 
			@JsonProperty("prodToDistDate") final Date prodToDistDate, 
			@JsonProperty("retailerName") final String retailerName,
			@JsonProperty("retailerAddress") final String retailerAddress, 
			@JsonProperty("distToRetaDate") final Date distToRetaDate) 
	{
		this.id = id;
		this.description = description;
		this.producer = producer;
		this.prodAddress = prodAddress;
		this.harvestDate = harvestDate;
		this.distributer = distributer;
		this.distAddress = distAddress;
		this.prodDistTranDate = prodDistTranDate;
		this.retailer = retailer;
		this.retAddress = retAddress;
		this.distRetTranDate = distRetTranDate;
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}

		if ((obj == null) || (getClass() != obj.getClass())) {
			return false;
		}

		FarmProduct other = (FarmProduct) obj;

		return Objects.deepEquals(new String[] { 
				getId(), 
				getDescription(),
				getProducer(),
				getProdAddress(),
				getHarvestDate().toString(),
				getDistributer(),
				getDistAddress(),
				getProdDistTranDate().toString(),
				getRetailer(),
				getRetAddress(),
				getDistRetTranDate().toString() },
				new String[] { 
						other.getId(), 
						other.getDescription(),
						other.getProducer(),
						other.getProdAddress(),
						other.getHarvestDate().toString(),
						other.getDistributer(),
						other.getDistAddress(),
						other.getProdDistTranDate().toString(),
						other.getRetailer(),
						other.getRetAddress(),
						other.getDistRetTranDate().toString() });
	}

	@Override
	public int hashCode() {
		return Objects.hash(
				getId(), 
				getDescription(),
				getProducer(),
				getProdAddress(),
				getHarvestDate().toString(),
				getDistributer(),
				getDistAddress(),
				getProdDistTranDate().toString(),
				getRetailer(),
				getRetAddress(),
				getDistRetTranDate().toString() );
	}
	
	@Override
	public String toString() {
		return this.getClass().getSimpleName() + "@" + Integer.toHexString(hashCode()) 
			+ " ["
			+ " id=" + id 
			+ ", description=" + description
			+ ", producer=" + producer 
			+ ", prodAddress=" + prodAddress 
			+ ", harvestDate=" + harvestDate.toString() 
			+ ", distributer=" + distributer
			+ ", distAddress=" + distAddress 
			+ ", prodDistTranDate=" + prodDistTranDate.toString()
			+ ", retailer=" + retailer 
			+ ", retAddress=" + retAddress
			+ ", distRetTranDate=" + distRetTranDate.toString() 
			+ "]";
	}

	
}
